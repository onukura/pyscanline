[project]
name = "pyscanline"
version = "0.1.0"
description = "A Python-based library that recreates a retro-futuristic style"
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
    "imageio>=2.36.1",
    "matplotlib>=3.10.0",
    "numpy>=2.2.1",
    "pillow>=11.0.0",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "ipython>=8.31.0",
    "pre-commit>=4.0.1",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "ruff>=0.8.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["pyscanline"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = ["tests"]

[tool.ruff]
include = ["pyproject.toml", "pyscanline/**/*.py", "tests/**/*.py"]
extend-exclude = ["examples"]
target-version = "py313"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I",  # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]
ignore = [
  "C901", # complex-structure (C901)
  "E203", # Whitespace before ':' (E203)
  "E501", # Line too long (82 &gt; 79 characters) (E501)
  "F811", # Redefinition of unused name from line n (F811)
  "E741", # Do not define classes named 'I', 'O', or 'l' (E742)
  "E266", # too many leading '#' for block comment (E266)
  "PIE",  # flake8-pie (PIE)
  "F601", # multi-value-repeated-key-literal (F601)
  "E721", # type-comparison (E721)
  "B008", # Do not perform function call `Body` in argument defaults
]

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
